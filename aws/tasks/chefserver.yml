---
- name: ChefServer | Create the ChefServer Instance
  local_action:
    module: ec2
    region: "{{ vpc_region }}"
    group: "{{ web_security_groups[0].sg_name }}"
    keypair: "{{ key_name }}"
    instance_type: "{{ instance_type }}"
    image: "{{ image_id }}"
    vpc_subnet_id: "{{ public_subnet }}"
    assign_public_ip: True
    wait: True
    wait_timeout: 600
    user_data: |
              #!/bin/sh
              sudo apt-get install nginx -y
    instance_tags:
      Name: "{{ vpc_name }}_ChefServer_Instance"
  register: ec2chef

- name: debug create instance
  debug: msg="{{ ec2chef }}"

- name: ChefServer | Set the Instances facts
  set_fact:
    instance_public_ip: "{{ ec2chef.instances[0].public_ip }}"
    instance_id: "{{ ec2chef.instances[0].id }}"

- name: ChefServer | Add the newly created EC2 instance(s) to the local host group (located inside the directory)
  local_action:
    module: lineinfile
    dest: "./inventory"
    regexp: "{{ instance_public_ip }}"
    insertafter: "[chefserver]"
    line: "{{ instance_public_ip }}"

- name: ChefServer | Wait for SSH to come up
  local_action:
    module: wait_for
    host: "{{ item }}"
    port: 22
    state: started
  with_items:
    - "{{ instance_public_ip }}"

- name: Create SSH Group to login dynamically to EC2 Instance(s)
  add_host:
    hostname: "{{ item }}"
    groupname: chefserver
  with_items:
    - "{{ instance_public_ip }}"

- name: ChefServer | Attach the persistent chefs volume to ec2 instance
  when: use_persistent_chefsvolume
  local_action:
    module: ec2_vol
    region: "{{ vpc_region }}"
    instance: "{{ ec2chef.instances[0].id }}"
    id: "{{ chefs_volume_id }}"
    device_name: "{{ chefs_volume_ec2_vol_device_name }}"
    delete_on_termination: no

